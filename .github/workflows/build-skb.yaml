name: Build OpenWrt for specific target and release

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: "0 4 * * *"

env:
  REMOTE_REPOSITORY: qosmio/openwrt-ipq
  REMOTE_BRANCH: qualcommax-6.1-nss-wifi-skb
  CONFIG_FILE: ax3600-skb.config
  NSS-STATUS_PATCH: 999-add-nss-load-to-status.patch
  CUSTOM_FILES_PATH: files/
  RELEASE_PREFIX: Qualcommax-6.1-nss-wifi-skb

jobs:
  check_commits:
    name: Check for new commits
    runs-on: ubuntu-latest
    outputs:
      commit_age: ${{ steps.calc_commit_age.outputs.commit_age }}
    steps:
      - name: Fetch latest commit
        run: |
          curl -sL "https://api.github.com/repos/${{ env.REMOTE_REPOSITORY }}/commits?sha=${{ env.REMOTE_BRANCH }}&per_page=1" | jq -r '[.[]][0]' > commit.json
      - name: Calculate commit age
        id: calc_commit_age
        run: |
          date="$(jq -r '.commit.committer.date' commit.json)"
          timestamp=$(date --utc -d "$date" +%s)
          hours=$(( ( $(date --utc +%s) - $timestamp ) / 3600 ))
          echo "Last commit date: $date"
          echo "Hours since last commit: $hours"
          echo "commit_age=$hours" >> $GITHUB_OUTPUT

  build:
    name: Build OpenWrt
    needs: check_commits
    runs-on: ubuntu-latest
    if: ${{ needs.check_commits.outputs.commit_age <= 24 || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout remote repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ env.REMOTE_BRANCH }}
      - name: Checkout custom repository
        uses: actions/checkout@v4
        with:
          repository: "starraiderx/Qualcommax_NSS_Builder"
          path: "custom_repo"
          run: |
            cd custom_repo
            ls
      - name: Update and install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Apply custom patches
        run: |
          mv custom_repo/patches/${{ env.NSS-STATUS_PATCH }} /feeds/luci/${{ env.NSS-STATUS_PATCH }}
          git apply /feeds/luci/${{ env.NSS-STATUS_PATCH }}
      - name: Configure firmware image
        run: |
          mv custom_repo/${{ env.CONFIG_FILE }} .config
          make defconfig
      - name: Include custom files
        run: |
          mkdir -p ${{ env.CUSTOM_FILES_PATH }}
          mv custom_repo/${{ env.CUSTOM_FILES_PATH }}* ${{ env.CUSTOM_FILES_PATH }}
      - name: Apply QOL enhancements
        run: |
          mkdir -p files/etc/uci-defaults
          cat > files/etc/uci-defaults/xxx_config << EOF
          uci set pbuf.opt.memory_profile=off
          uci set wireless.radio0.country='US'
          uci set wireless.radio1.country='US'
          uci set wireless.radio2.country='US'
          uci set wireless.radio1.htmode='HE160'
          uci set wireless.radio1.channel='44'
          uci del firewall.cfg01e63d.flow_offloading
          uci commit
          EOF
      - name: Download package sources
        run: make download V=s
      - name: Build tools
        run: |
          make tools/install -j$(($(nproc)+1)) V=s || \
          make tools/install V=s
      - name: Build toolchain
        run: |
          make toolchain/install -j$(($(nproc)+1)) V=s || \
          make toolchain/install V=s
      - name: Build target images
        run: |
          make -j$(($(nproc)+1)) V=s || \
          make V=s
      - name: Package output
        run: tar -cvf ipq807xx-images.tar bin/targets/qualcommax/ipq807x
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ipq807x-images
          path: ipq807xx-images.tar

  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ipq807x-images
      - name: Extract artifacts
        run: tar xf ipq807xx-images.tar
      - name: Get current date
        run: echo "RELEASE_DATE=$(date +%F)" >> $GITHUB_ENV
      - name: Create release
        uses: softprops/action-gh-release@master
        with:
          files: bin/targets/qualcommax/ipq807x/*
          tag_name: ${{ env.RELEASE_PREFIX }}-${{ env.RELEASE_DATE }}
          name: Updated prebuilt images ${{ env.RELEASE_DATE }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Clean up old releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 2
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
