name: Build remote repo only if new commits were pushed
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: "0 4 * * *"
jobs:
  check:
    name: Check remote repo for new commits
    runs-on: ubuntu-latest
    steps:
      - name: Use GitHub API to poll commits
        run: |
          curl -sL "https://api.github.com/repos/$REMOTE_REPOSITORY/commits?sha=$REMOTE_BRANCH&per_page=1" | jq -r '[.[]][0]' > commit.json
        env:
          REMOTE_REPOSITORY: qosmio/openwrt-ipq
          REMOTE_BRANCH: qualcommax-6.1-nss-wifi
      - name: Calculate hours since last commit
        id: calc
        run: |
          date="$(jq -r '.commit.committer.date' commit.json)"
          timestamp=$(date --utc -d "$date" +%s)
          hours=$(( ( $(date --utc +%s) - $timestamp ) / 3600 ))
          echo "Last commit date: $date"
          echo "Hours since last commit: $hours"
          echo "commit_age=$hours" >> $GITHUB_OUTPUT
    outputs:
      commit_age: ${{ steps.calc.outputs.commit_age }}

  build:
    name: Build the remote repository
    needs: check
    runs-on: ubuntu-latest
    if: ${{ needs.check.outputs.commit_age <= 24 || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Show inputs received from previous job
        env:
          COMMIT_AGE: ${{ needs.check.outputs.commit_age }}
        run: |
          echo "Build triggered with commits last pushed $COMMIT_AGE hours ago"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: qosmio/openwrt-ipq
          ref: qualcommax-6.1-nss-wifi
      - name: Checkout my repository for config file
        uses: actions/checkout@v4
        with:
          repository: "starraiderx/Qualcommax_NSS_Builder"
          path: "my_repo"
      - name: Update and install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Configure the firmware image
        run: |
          mv my_repo/ax3600.config .config
          make defconfig
      - name: Include custom files
        run: |
          mkdir -p files/
          mv my_repo/files/* files/
      - name: QOL Enhancements
        run: |
          mkdir -p files/etc/uci-defaults
          cat > files/etc/uci-defaults/xxx_config << EOF
          uci set pbuf.opt.memory_profile=off
          uci set wireless.radio0.country='US'
          uci set wireless.radio1.country='US'
          uci set wireless.radio2.country='US'
          uci set wireless.radio1.htmode='HE160'
          uci set wireless.radio1.channel='44'
          uci del firewall.cfg01e63d.flow_offloading
          uci commit
          EOF
      - name: Download package sources
        run: |
          make download V=s
      - name: Build tools
        run: |
          make tools/install -j$(nproc) V=s || \
          make tools/install V=s
      - name: Build toolchain
        run: |
          make toolchain/install -j$(nproc) V=s || \
          make toolchain/install V=s
      - name: Build target images
        run: |
          make -j$(nproc) V=s || \
          make V=s
      - name: TAR output
        run: tar -cvf ipq807xx-images.tar bin/targets/qualcommax/ipq807x
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ipq807x-images
          path: ipq807xx-images.tar

  release:
    name: Upload artifacts as release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download the image artifacts
        uses: actions/download-artifact@v4
        with:
          name: ipq807x-images

      - name: Extract the image artifacts
        run: tar xf ipq807xx-images.tar

      - name: Get the current date
        run: echo "NOW=$(date +%F)" >> $GITHUB_ENV

      - name: Create and upload release
        uses: softprops/action-gh-release@master
        with:
          files: bin/targets/qualcommax/ipq807x/*
          tag_name: Qualcommax-6.1-nss-wifi-${{ env.NOW }}
          name: Updated prebuilt images ${{ env.NOW }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete older releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 2
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
